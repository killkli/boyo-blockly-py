{"version":3,"sources":["../webpack/bootstrap","../pyodide-worker-runner/webpack/universalModuleDefinition","../pyodide-worker-runner/lib/pyodide_worker_runner.py","../pyodide-worker-runner/node_modules/retry/index.js","../pyodide-worker-runner/node_modules/retry/lib/retry.js","../pyodide-worker-runner/node_modules/retry/lib/retry_operation.js","../webpack:/pyodide-worker-runner/external umd \"comlink\"","../webpack:/pyodide-worker-runner/external umd \"comsync\"","../webpack:/pyodide-worker-runner/external umd \"pyodide\"","../pyodide-worker-runner/webpack/bootstrap","../webpack:/pyodide-worker-runner/webpack/runtime/define property getters","../webpack:/pyodide-worker-runner/webpack/runtime/hasOwnProperty shorthand","../webpack:/pyodide-worker-runner/webpack/runtime/make namespace object","../pyodide-worker-runner/node_modules/p-retry/index.js","../pyodide-worker-runner/lib/index.ts","../../../src/comlink.ts","../comsync/webpack/universalModuleDefinition","../webpack:/comsync/external umd \"comlink\"","../webpack:/comsync/external umd \"sync-message\"","../comsync/webpack/bootstrap","../webpack:/comsync/webpack/runtime/compat get default export","../webpack:/comsync/webpack/runtime/define property getters","../webpack:/comsync/webpack/runtime/hasOwnProperty shorthand","../webpack:/comsync/webpack/runtime/make namespace object","../comsync/lib/index.ts","../syncMessage/webpack/universalModuleDefinition","../syncMessage/webpack/bootstrap","../webpack:/syncMessage/webpack/runtime/define property getters","../webpack:/syncMessage/webpack/runtime/hasOwnProperty shorthand","../webpack:/syncMessage/webpack/runtime/make namespace object","../syncMessage/lib/index.ts","../../src/js/node_modules/stackframe/stackframe.js","../../src/js/node_modules/error-stack-parser/error-stack-parser.js","../../src/js/compat.ts","../../src/js/module.ts","../../src/js/pyodide.ts","../../src/js/version.ts","../../src/js/pyodide.umd.ts","../node_modules/webpack/buildin/global.js","../node_modules/process/browser.js","python_core.tar.load_by_url","Worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","factory","self","__WEBPACK_EXTERNAL_MODULE__422__","__WEBPACK_EXTERNAL_MODULE__272__","__WEBPACK_EXTERNAL_MODULE__28__","RetryOperation","operation","options","timeouts","forever","retries","Infinity","unref","maxRetryTime","Array","concat","opts","factor","minTimeout","maxTimeout","randomize","Error","push","this","createTimeout","length","sort","a","b","attempt","random","Math","timeout","round","max","pow","min","wrap","obj","methods","method","original","op","args","slice","arguments","callback","pop","err","retry","mainError","apply","_originalTimeouts","JSON","parse","stringify","_timeouts","_options","_maxRetryTime","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_timer","_cachedTimeouts","reset","stop","clearTimeout","currentTime","Date","getTime","unshift","shift","splice","setTimeout","fn","timeoutOps","cb","try","console","log","start","errors","attempts","counts","mainErrorCount","error","message","count","__webpack_module_cache__","cachedModule","__webpack_modules__","definition","prop","networkErrorMsgs","Set","AbortError","constructor","super","originalError","stack","getDOMException","errorMessage","globalThis","DOMException","async","pRetry","input","Promise","resolve","reject","onFailedAttempt","attemptNumber","TypeError","has","retriesLeft","signal","aborted","addEventListener","reason","once","pyodide_worker_runner_contents","defaultPyodideLoader","version","indexURL","result","loadPyodide","versionInfo","split","map","Number","loadPyodideAndPackage","packageOptions","pyodideLoader","pyodide","packageBuffer","format","extractDir","url","all","packageCache","response","fetch","ok","status","statusText","arrayBuffer","set","vInfo","unpackArchive","pyimport","path","append","initPyodide","registerComlink","sys","pathlib","dirPath","Path","mkdir","write_text","Map","makeRunnerCallback","comsyncExtras","callbacks","type","data","toJs","dict_converter","fromEntries","prompt","readMessage","output","parts","other","syncSleep","seconds","pyodideExpose","func","syncExpose","interruptBuffer","PyodideClient","SyncClient","proxyMethod","SharedArrayBuffer","Int32Array","BYTES_PER_ELEMENT","interrupter","PyodideFatalErrorReloader","loader","pyodidePromise","withPyodide","e","pyodide_fatal_error","require","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","serialized","isError","assign","ep","ev","id","argumentList","fromWireValue","returnValue","parent","reduce","rawValue","proxy","transfer","undefined","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","toString","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","transferCache","WeakMap","transfers","windowEndpoint","w","context","targetOrigin","msg","handler","serializedValue","fill","floor","MAX_SAFE_INTEGER","join","__WEBPACK_EXTERNAL_MODULE__746__","InterruptError","NoChannelError","workerCreator","channel","state","_messageIdBase","_messageIdSeq","_start","interrupt","terminate","_writeMessage","interrupted","runningThisTask","uuidv4","syncMessageCallback","_awaitingMessageResolve","_interruptPromise","_interruptRejector","race","_reset","writeMessage","workerProxy","worker","messageId","makeMessageId","messageIdBase","messageIdSeq","fullSyncMessageCallback","ms","base","seq","BASE_URL_SUFFIX","VERSION","isServiceWorkerRequest","request","includes","serviceWorkerFetchListener","earlyMessages","resolvers","respondWith","success","Response","endsWith","json","resolver","early","respond","asyncSleep","ServiceWorkerError","setPrototypeOf","writeMessageAtomics","bytes","TextEncoder","encode","meta","Atomics","store","notify","writeMessageServiceWorker","navigator","serviceWorker","ready","baseUrl","startTime","now","body","makeChannel","makeAtomicsChannel","atomics","makeServiceWorkerChannel","bufferSize","Uint8Array","scope","ensurePositiveNumber","defaultValue","checkInterrupt","checkTimeout","performance","totalTimeout","POSITIVE_INFINITY","check","wait","size","exchange","text","TextDecoder","decode","XMLHttpRequest","open","requestBody","send","responseText","remaining","crypto","randomUUID","replace","char","getRandomValues","_capitalize","str","charAt","toUpperCase","substring","_getter","booleanProps","numericProps","stringProps","props","StackFrame","getArgs","setArgs","getEvalOrigin","evalOrigin","setEvalOrigin","fileName","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","functionName","getFunctionName","getIsEval","fromString","argsStartIndex","indexOf","argsEndIndex","lastIndexOf","locationString","exec","Boolean","j","isNaN","parseFloat","isFinite","k","String","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","require$$0","stacktrace","parseOpera","match","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","filter","line","sanitizedLine","location","locationParts","source","functionNameRegex","matches","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","len","argsRaw","tokens","functionCall","IN_NODE","process","release","browser","nodeUrlMod","nodeFetch","nodePath","nodeVmMod","nodeFsPromisesMod","resolvePath","pathSep","loadBinaryFile","loadScript","URL","_file_sub_resource_hash","startsWith","readFile","buffer","byteOffset","byteLength","subResourceHash","integrity","document","import","importScripts","runInThisContext","pathToFileURL","href","stdout","stderr","Module","print","printErr","stdin","preRun","FS","encoder","inputIndex","stdinWrapper","config","character","createStdinWrapper","finalizeBootstrap","API","runPythonInternal_dict","_pyodide","eval_code","importlib","runPythonInternal","import_module","homedir","globals","builtins","builtins_dict","symbol","Reflect","importhook","_importhook","register_js_finder","register_js_module","jsglobals","register_unvendored_stdlib_finder","makePublicAPI","pyodide_code","pyodide_ffi","package_loader","pyodide_py","default","sep","node_modules","child_process","mod","pyodide_py_tar_promise","setStandardStreams","mkdirTree","chdir","moduleLoaded","postRun","locateFile","scriptSrc","_createPyodideModule","pyodide_py_tar","stream","code_ptr","stringToNewUTF8","_PyRun_SimpleString","packageIndexReady","repodata_info","fullStdLib","runPython","g","Function","window","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","array","noop","nextTick","title","env","argv","versions","on","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","dir","umask","reloader","pythonCoreUrl","init","REACT_APP_LANGUAGE","programCount","runCode","extras","entry","outputCallback","inputCallback","outputPromise","pyodide_worker_runner","install_imports","checkerModule","default_runner","set_filename","check_entry","Comlink"],"mappings":"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","file":"static/js/Worker.9135dd84.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/course/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"comsync\"), require(\"comlink\"), require(\"pyodide\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"comsync\", \"comlink\", \"pyodide\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pyodide-worker-runner\"] = factory(require(\"comsync\"), require(\"comlink\"), require(\"pyodide\"));\n\telse\n\t\troot[\"pyodide-worker-runner\"] = factory(root[\"comsync\"], root[\"comlink\"], root[\"pyodide\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__422__, __WEBPACK_EXTERNAL_MODULE__272__, __WEBPACK_EXTERNAL_MODULE__28__) => {\nreturn ","export default \"import importlib\\nimport sys\\n\\nimport pyodide  # noqa\\nimport pyodide_js  # noqa\\n\\nsys.setrecursionlimit(400)\\n\\n\\ndef find_imports_to_install(imports):\\n    try:\\n        to_package_name = pyodide_js._module._import_name_to_package_name.to_py()\\n    except AttributeError:\\n        to_package_name = pyodide_js._api._import_name_to_package_name.to_py()\\n\\n    to_install = []\\n    for module in imports:\\n        try:\\n            importlib.import_module(module)\\n        except ModuleNotFoundError:\\n            to_install.append(dict(module=module, package=to_package_name.get(module, module)))\\n    return to_install\\n\\n\\nasync def install_imports(source_code_or_imports, message_callback=lambda *args: None):\\n    if isinstance(source_code_or_imports, str):\\n        try:\\n            imports = pyodide.find_imports(source_code_or_imports)\\n        except SyntaxError:\\n            return\\n    else:\\n        imports = source_code_or_imports\\n\\n    to_install = find_imports_to_install(imports)\\n    if to_install:\\n        message_callback(\\\"loading_all\\\", to_install)\\n        try:\\n            import micropip  # noqa\\n        except ModuleNotFoundError:\\n            micropip_entry = dict(module=\\\"micropip\\\", package=\\\"micropip\\\")\\n            message_callback(\\\"loading_micropip\\\", micropip_entry)\\n            await pyodide_js.loadPackage(\\\"micropip\\\")\\n            import micropip  # noqa\\n            message_callback(\\\"loaded_micropip\\\", micropip_entry)\\n\\n        for entry in to_install:\\n            message_callback(\\\"loading_one\\\", entry)\\n            await micropip.install(entry[\\\"package\\\"])\\n            message_callback(\\\"loaded_one\\\", entry)\\n        message_callback(\\\"loaded_all\\\", to_install)\\n\";","module.exports = require('./lib/retry');","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__272__;","module.exports = __WEBPACK_EXTERNAL_MODULE__422__;","module.exports = __WEBPACK_EXTERNAL_MODULE__28__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import retry from 'retry';\n\nconst networkErrorMsgs = new Set([\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed', // `cross-fetch`\n]);\n\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.has(errorMessage);\n\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new Error(errorMessage)\n\t: new DOMException(errorMessage);\n\nexport default async function pRetry(input, options) {\n\treturn new Promise((resolve, reject) => {\n\t\toptions = {\n\t\t\tonFailedAttempt() {},\n\t\t\tretries: 10,\n\t\t\t...options,\n\t\t};\n\n\t\tconst operation = retry.operation(options);\n\n\t\toperation.attempt(async attemptNumber => {\n\t\t\ttry {\n\t\t\t\tresolve(await input(attemptNumber));\n\t\t\t} catch (error) {\n\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (error instanceof AbortError) {\n\t\t\t\t\toperation.stop();\n\t\t\t\t\treject(error.originalError);\n\t\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\t\toperation.stop();\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\t\treject(operation.mainError());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (options.signal && !options.signal.aborted) {\n\t\t\toptions.signal.addEventListener('abort', () => {\n\t\t\t\toperation.stop();\n\t\t\t\tconst reason = options.signal.reason === undefined\n\t\t\t\t\t? getDOMException('The operation was aborted.')\n\t\t\t\t\t: options.signal.reason;\n\t\t\t\treject(reason instanceof Error ? reason : getDOMException(reason));\n\t\t\t}, {\n\t\t\t\tonce: true,\n\t\t\t});\n\t\t}\n\t});\n}\n","import pRetry from \"p-retry\";\nimport {SyncClient, syncExpose, SyncExtras} from \"comsync\";\nimport * as Comlink from \"comlink\";\nimport {loadPyodide, PyodideInterface, version as npmVersion} from \"pyodide\";\n\nconst pyodide_worker_runner_contents = require(\"!!raw-loader!./pyodide_worker_runner.py\")\n  .default;\n\nexport type PyodideLoader = () => Promise<PyodideInterface>;\nexport interface PackageOptions {\n  format: string;\n  url: string;\n  extractDir?: string;\n}\n\nexport async function defaultPyodideLoader(version: string = npmVersion) {\n  const indexURL = `https://cdn.jsdelivr.net/pyodide/v${version}/full/`;\n  const result = await loadPyodide({indexURL});\n  if (result.version !== version) {\n    throw new Error(\n      `loadPyodide loaded version ${result.version} instead of ${version}`,\n    );\n  }\n  return result;\n}\n\nexport function versionInfo(version: string) {\n  return version.split(\".\").map(Number);\n}\n\nexport async function loadPyodideAndPackage(\n  packageOptions: PackageOptions,\n  pyodideLoader: PyodideLoader = defaultPyodideLoader,\n) {\n  let {format, extractDir, url} = packageOptions;\n  extractDir = extractDir || \"/tmp/\";\n\n  let pyodide: PyodideInterface;\n  let packageBuffer: ArrayBuffer;\n  [pyodide, packageBuffer] = await Promise.all([\n    pRetry(() => pyodideLoader(), {retries: 3}),\n    pRetry(() => getPackageBuffer(url), {retries: 3}),\n  ]);\n\n  const vInfo = versionInfo(pyodide.version);\n  pyodide.unpackArchive(\n    packageBuffer,\n    format,\n    vInfo[0] === 0 && vInfo[1] <= 19 ? (extractDir as any) : {extractDir},\n  );\n\n  const sys = pyodide.pyimport(\"sys\");\n  sys.path.append(extractDir);\n\n  initPyodide(pyodide);\n\n  return pyodide;\n}\n\nexport function initPyodide(pyodide: PyodideInterface) {\n  pyodide.registerComlink(Comlink);\n\n  const sys = pyodide.pyimport(\"sys\");\n  const pathlib = pyodide.pyimport(\"pathlib\");\n\n  const dirPath = \"/tmp/pyodide_worker_runner/\";\n  sys.path.append(dirPath);\n  pathlib.Path(dirPath).mkdir();\n  pathlib\n    .Path(dirPath + \"pyodide_worker_runner.py\")\n    .write_text(pyodide_worker_runner_contents);\n  pyodide.pyimport(\"pyodide_worker_runner\");\n}\n\nconst packageCache = new Map<string, ArrayBuffer>();\n\nasync function getPackageBuffer(url: string) {\n  if (packageCache.has(url)) {\n    console.log(\"Loaded package from cache\");\n    return packageCache.get(url);\n  }\n  console.log(\"Fetching package from \" + url.slice(0, 100) + \"...\");\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(\n      `Request for package failed with status ${response.status}: ${response.statusText}`,\n    );\n  }\n  const result = await response.arrayBuffer();\n  console.log(\"Fetched package\");\n  packageCache.set(url, result);\n  return result;\n}\n\nexport interface OutputPart {\n  type: string;\n  text: string;\n  [key: string]: unknown;\n}\n\nexport interface RunnerCallbacks {\n  input?: (prompt: string) => void;\n  output: (parts: OutputPart[]) => unknown;\n  other?: (type: string, data: unknown) => unknown;\n}\n\nexport function makeRunnerCallback(\n  comsyncExtras: SyncExtras,\n  callbacks: RunnerCallbacks,\n) {\n  return function (type: string, data: any) {\n    if (data.toJs) {\n      data = data.toJs({dict_converter: Object.fromEntries});\n    }\n\n    if (type === \"input\") {\n      callbacks.input && callbacks.input(data.prompt);\n      return comsyncExtras.readMessage() + \"\\n\";\n    } else if (type === \"sleep\") {\n      comsyncExtras.syncSleep(data.seconds * 1000);\n    } else if (type === \"output\") {\n      return callbacks.output(data.parts);\n    } else {\n      return callbacks.other(type, data);\n    }\n  };\n}\n\nexport interface PyodideExtras extends SyncExtras {\n  interruptBuffer: Int32Array | null;\n}\n\nexport function pyodideExpose<T extends any[], R>(\n  func: (extras: PyodideExtras, ...args: T) => R,\n) {\n  return syncExpose(async function (\n    comsyncExtras: SyncExtras,\n    interruptBuffer: Int32Array | null,\n    ...args: T\n  ): Promise<R> {\n    return func({...comsyncExtras, interruptBuffer}, ...args);\n  });\n}\n\nexport class PyodideClient<T = any> extends SyncClient<T> {\n  async call(proxyMethod: any, ...args: any[]) {\n    let interruptBuffer: Int32Array | null = null;\n    if (typeof SharedArrayBuffer !== \"undefined\") {\n      interruptBuffer = new Int32Array(\n        new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * 1),\n      );\n      this.interrupter = () => {\n        interruptBuffer[0] = 2;\n      };\n    }\n\n    return super.call(proxyMethod, interruptBuffer, ...args);\n  }\n}\n\nexport class PyodideFatalErrorReloader {\n  private pyodidePromise: Promise<PyodideInterface>;\n\n  constructor(private readonly loader: PyodideLoader) {\n    this.pyodidePromise = loader();\n  }\n\n  public async withPyodide<T>(\n    fn: (pyodide: PyodideInterface) => Promise<T>,\n  ): Promise<T> {\n    const pyodide = await this.pyodidePromise;\n    try {\n      return await fn(pyodide);\n    } catch (e) {\n      if (e.pyodide_fatal_error) {\n        this.pyodidePromise = this.loader();\n      }\n      throw e;\n    }\n  }\n}\n","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"sync-message\"), require(\"comlink\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"sync-message\", \"comlink\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"comsync\"] = factory(require(\"sync-message\"), require(\"comlink\"));\n\telse\n\t\troot[\"comsync\"] = factory(root[\"sync-message\"], root[\"comlink\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__746__, __WEBPACK_EXTERNAL_MODULE__272__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__272__;","module.exports = __WEBPACK_EXTERNAL_MODULE__746__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {Channel, readMessage, uuidv4, writeMessage} from \"sync-message\";\nimport * as Comlink from \"comlink\";\n\nexport class InterruptError extends Error {\n  // To avoid having to use instanceof\n  public readonly type = \"InterruptError\";\n}\n\nexport class NoChannelError extends Error {\n  // To avoid having to use instanceof\n  public readonly type = \"NoChannelError\";\n}\n\nexport class SyncClient<T = any> {\n  public interrupter?: () => void;\n  public state: \"idle\" | \"running\" | \"awaitingMessage\" | \"sleeping\" = \"idle\";\n  public worker: Worker;\n  public workerProxy: Comlink.Remote<T>;\n\n  private _interruptRejector?: (reason?: any) => void;\n  private _interruptPromise?: Promise<void>;\n\n  private _messageIdBase = \"\";\n  private _messageIdSeq = 0;\n\n  private _awaitingMessageResolve?: () => void;\n\n  public constructor(\n    public workerCreator: () => Worker,\n    public channel?: Channel | null,\n  ) {\n    this._start();\n  }\n\n  public async interrupt() {\n    if (this.state === \"idle\") {\n      return;\n    }\n\n    if (this.state === \"awaitingMessage\" || this.state === \"sleeping\") {\n      await this._writeMessage({interrupted: true});\n      return;\n    }\n\n    if (this.interrupter) {\n      await this.interrupter();\n      return;\n    }\n\n    this.terminate();\n    this._start();\n  }\n\n  public async call(proxyMethod: any, ...args: any[]) {\n    if (this.state !== \"idle\") {\n      throw new Error(`State is ${this.state}, not idle`);\n    }\n\n    let runningThisTask = true;\n    this.state = \"running\";\n\n    this._messageIdBase = uuidv4();\n    this._messageIdSeq = 0;\n\n    const syncMessageCallback: SyncMessageCallback = (status) => {\n      if (!runningThisTask || status === \"init\") {\n        return;\n      }\n\n      if (status === \"reading\") {\n        this.state = \"awaitingMessage\";\n        this._messageIdSeq++;\n        this._awaitingMessageResolve?.();\n      } else if (status === \"sleeping\") {\n        this.state = \"sleeping\";\n        this._messageIdSeq++;\n      } else if (status === \"slept\") {\n        this.state = \"running\";\n      }\n    };\n\n    this._interruptPromise = new Promise(\n      (resolve, reject) => (this._interruptRejector = reject),\n    );\n\n    try {\n      return await Promise.race([\n        proxyMethod(\n          this.channel,\n          Comlink.proxy(syncMessageCallback),\n          this._messageIdBase,\n          ...args,\n        ),\n        this._interruptPromise,\n      ]);\n    } finally {\n      runningThisTask = false;\n      this._reset();\n    }\n  }\n\n  public async writeMessage(message: any) {\n    if (this.state === \"idle\" || !this._messageIdBase) {\n      throw new Error(\"No active call to send a message to.\");\n    }\n\n    if (this.state !== \"awaitingMessage\") {\n      if (this._awaitingMessageResolve) {\n        throw new Error(\n          \"Not waiting for message, and another write is already queued.\",\n        );\n      }\n\n      await new Promise<void>((resolve) => {\n        this._awaitingMessageResolve = resolve;\n      });\n      delete this._awaitingMessageResolve;\n    }\n\n    await this._writeMessage({message});\n  }\n\n  public terminate() {\n    this._interruptRejector?.(new InterruptError(\"Worker terminated\"));\n    this.workerProxy[Comlink.releaseProxy]();\n    this.worker.terminate();\n    delete this.workerProxy;\n    delete this.worker;\n  }\n\n  private async _writeMessage(message: any) {\n    this.state = \"running\";\n    const messageId = makeMessageId(this._messageIdBase, this._messageIdSeq);\n    await writeMessage(this.channel, message, messageId);\n  }\n\n  private _start() {\n    this._reset();\n    this.worker = this.workerCreator();\n    this.workerProxy = Comlink.wrap<T>(this.worker);\n  }\n\n  private _reset() {\n    this.state = \"idle\";\n    delete this._interruptPromise;\n    delete this._interruptRejector;\n    delete this._awaitingMessageResolve;\n    delete this._messageIdBase;\n  }\n}\n\nexport interface SyncExtras {\n  channel: Channel | null;\n  readMessage: () => any;\n  syncSleep: (ms: number) => void;\n}\n\ntype SyncMessageCallbackStatus = \"init\" | \"reading\" | \"sleeping\" | \"slept\";\ntype SyncMessageCallback = (status: SyncMessageCallbackStatus) => void;\n\nexport function syncExpose<T extends any[], R>(\n  func: (extras: SyncExtras, ...args: T) => R,\n) {\n  return async function (\n    channel: Channel | null,\n    syncMessageCallback: SyncMessageCallback,\n    messageIdBase: string,\n    ...args: T\n  ): Promise<R> {\n    await syncMessageCallback(\"init\");\n    let messageIdSeq = 0;\n\n    function fullSyncMessageCallback(\n      status: \"reading\" | \"sleeping\",\n      options?: {timeout: number},\n    ) {\n      if (!channel) {\n        throw new NoChannelError();\n      }\n      syncMessageCallback(status);\n      const messageId = makeMessageId(messageIdBase, ++messageIdSeq);\n      const response = readMessage(channel, messageId, options);\n      if (response) {\n        const {message, interrupted} = response;\n        if (interrupted) {\n          throw new InterruptError();\n        }\n        return message;\n      } else if (status === \"sleeping\") {\n        syncMessageCallback(\"slept\");\n      }\n    }\n\n    const extras: SyncExtras = {\n      channel,\n      readMessage() {\n        return fullSyncMessageCallback(\"reading\");\n      },\n      syncSleep(ms: number) {\n        if (!(ms > 0)) {\n          return;\n        }\n        fullSyncMessageCallback(\"sleeping\", {timeout: ms});\n      },\n    };\n    return func(extras, ...args);\n  };\n}\n\nfunction makeMessageId(base: string, seq: number) {\n  return `${base}-${seq}`;\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"syncMessage\"] = factory();\n\telse\n\t\troot[\"syncMessage\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const BASE_URL_SUFFIX = \"__SyncMessageServiceWorkerInput__\";\nconst VERSION = \"__sync-message-v2__\";\n\ninterface ServiceWorkerReadRequest {\n  messageId: string;\n  timeout: number;\n}\n\ninterface ServiceWorkerWriteRequest {\n  messageId: string;\n  message: string;\n}\n\ninterface ServiceWorkerResponse {\n  message: any;\n  version: string;\n}\n\n/**\n * Checks whether the given request is meant to be intercepted by the sync-message serviceWorkerFetchListener.\n */\nexport function isServiceWorkerRequest(request: FetchEvent | string): boolean {\n  if (typeof request !== \"string\") {\n    request = request.request.url;\n  }\n  return request.includes(BASE_URL_SUFFIX);\n}\n\n/**\n * Returns a function that can respond to fetch events in a service worker event listener.\n * The function returns true if the request came from this library and it responded.\n * Call `serviceWorkerFetchListener` and reuse the returned function as it manages internal state.\n */\nexport function serviceWorkerFetchListener(): (e: FetchEvent) => boolean {\n  const earlyMessages: {[messageId: string]: any} = {};\n  const resolvers: {[messageId: string]: (r: Response) => void} = {};\n\n  return (e: FetchEvent): boolean => {\n    const {url} = e.request;\n    if (!isServiceWorkerRequest(url)) {\n      return false;\n    }\n\n    async function respond(): Promise<Response> {\n      function success(message: any) {\n        const response: ServiceWorkerResponse = {message, version: VERSION};\n        return new Response(JSON.stringify(response), {status: 200});\n      }\n\n      if (url.endsWith(\"/read\")) {\n        const {\n          messageId,\n          timeout,\n        }: ServiceWorkerReadRequest = await e.request.json();\n        const data = earlyMessages[messageId];\n        if (data) {\n          delete earlyMessages[messageId];\n          return success(data);\n        } else {\n          return await new Promise((resolver) => {\n            resolvers[messageId] = resolver;\n\n            function callback() {\n              delete resolvers[messageId];\n              resolver(new Response(\"\", {status: 408})); // timeout\n            }\n\n            setTimeout(callback, timeout);\n          });\n        }\n      } else if (url.endsWith(\"/write\")) {\n        const {\n          message,\n          messageId,\n        }: ServiceWorkerWriteRequest = await e.request.json();\n        const resolver = resolvers[messageId];\n        if (resolver) {\n          resolver(success(message));\n          delete resolvers[messageId];\n        } else {\n          earlyMessages[messageId] = message;\n        }\n        return success({early: !resolver});\n      } else if (url.endsWith(\"/version\")) {\n        return new Response(VERSION, {status: 200});\n      }\n    }\n\n    e.respondWith(respond());\n    return true;\n  };\n}\n\n/**\n * Convenience function that allows writing `await asyncSleep(1000)`\n * to wait one second before continuing in an async function.\n */\nexport function asyncSleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n/**\n * Options for making an atomics type channel.\n */\nexport interface AtomicsChannelOptions {\n  // The number of bytes to allocate for the `SharedArrayBuffer`.\n  // Defaults to 128KiB.\n  // `writeMessage` will throw an error if the message is larger than the buffer size.\n  bufferSize?: number;\n}\n\n/**\n * Options for making a serviceWorker type channel.\n */\nexport interface ServiceWorkerChannelOptions {\n  // a string representing the prefix of a path/URL, defaulting to `\"/\"`.\n  // Both `readMessage` and `writeMessage` will make requests that start with this value\n  // so make sure that your service worker is controlling the page and can intercept those requests.\n  // The `scope` property of the registration object returned by `navigator.serviceWorker.register` should work.\n  scope?: string;\n\n  // number of milliseconds representing a grace period for the service worker to start up.\n  // If requests made by `readMessage` and `writeMessage` fail,\n  // they will be retried until this timeout is exceeded,\n  // at which point they will throw an error.\n  timeout?: number;\n}\n\ninterface AtomicsChannel {\n  type: \"atomics\";\n  data: Uint8Array;\n  meta: Int32Array;\n}\n\ninterface ServiceWorkerChannel {\n  type: \"serviceWorker\";\n  baseUrl: string;\n  timeout: number;\n}\n\nexport class ServiceWorkerError extends Error {\n  // To avoid having to use instanceof\n  public readonly type = \"ServiceWorkerError\";\n\n  constructor(public url: string, public status: number) {\n    super(\n      `Received status ${status} from ${url}. Ensure the service worker is registered and active.`,\n    );\n    // See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work for info about this workaround.\n    Object.setPrototypeOf(this, ServiceWorkerError.prototype);\n  }\n}\n\nexport type Channel = AtomicsChannel | ServiceWorkerChannel;\n\nexport function writeMessageAtomics(channel: AtomicsChannel, message: any) {\n  const encoder = new TextEncoder();\n  const bytes = encoder.encode(JSON.stringify(message));\n  const {data, meta} = channel;\n  if (bytes.length > data.length) {\n    throw new Error(\n      \"Message is too big, increase bufferSize when making channel.\",\n    );\n  }\n  data.set(bytes, 0);\n  Atomics.store(meta, 0, bytes.length);\n  Atomics.store(meta, 1, 1);\n  Atomics.notify(meta, 1);\n}\n\nexport async function writeMessageServiceWorker(\n  channel: ServiceWorkerChannel,\n  message: any,\n  messageId: string,\n) {\n  await navigator.serviceWorker.ready;\n  const url = channel.baseUrl + \"/write\";\n  const startTime = Date.now();\n  while (true) {\n    const request: ServiceWorkerWriteRequest = {message, messageId};\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(request),\n    });\n    if (\n      response.status === 200 &&\n      (await response.json()).version === VERSION\n    ) {\n      return;\n    }\n    if (Date.now() - startTime < channel.timeout) {\n      await asyncSleep(100);\n      continue;\n    }\n    throw new ServiceWorkerError(url, response.status);\n  }\n}\n\n/**\n * Call this in the browser's main UI thread\n * to send a message to the worker reading from the channel with `readMessage`.\n *\n * @param channel a non-null object returned by `makeChannel`, `makeAtomicsChannel`, or `makeServiceWorkerChannel`.\n * @param message any object that can be safely passed to `JSON.stringify` and then decoded with `JSON.parse`.\n * @param messageId a unique string identifying the message that the worker is waiting for.\n *                  Currently only used by service worker channels.\n */\nexport async function writeMessage(\n  channel: Channel,\n  message: any,\n  messageId: string,\n) {\n  if (channel.type === \"atomics\") {\n    writeMessageAtomics(channel, message);\n  } else {\n    await writeMessageServiceWorker(channel, message, messageId);\n  }\n}\n\n/**\n * Accepts one optional argument `options` with optional keys for configuring the different types of channel.\n * See the types `AtomicsChannelOptions` and `ServiceWorkerChannelOptions` for more info.\n *\n * If `SharedArrayBuffer` is available, `makeChannel` will use it to create an `atomics` type channel.\n * Otherwise, if `navigator.serviceWorker` is available, it will create a `serviceWorker` type channel,\n * but registering the service worker is up to you.\n * If that's not available either, it'll return `null`.\n *\n * Channel objects have a `type` property which is either `\"atomics\"` or `\"serviceWorker\"`.\n * The other properties are for internal use.\n *\n * If you want to control the type of channel,\n * you can call `makeAtomicsChannel` or `makeServiceWorkerChannel` directly.\n *\n * A single channel object shouldn't be used by multiple workers simultaneously,\n * i.e. you should only read/write one message at a time.\n */\nexport function makeChannel(\n  options: {\n    atomics?: AtomicsChannelOptions;\n    serviceWorker?: ServiceWorkerChannelOptions;\n  } = {},\n): Channel | null {\n  if (typeof SharedArrayBuffer !== \"undefined\") {\n    return makeAtomicsChannel(options.atomics);\n  } else if (\"serviceWorker\" in navigator) {\n    return makeServiceWorkerChannel(options.serviceWorker);\n  } else {\n    return null;\n  }\n}\n\nexport function makeAtomicsChannel({\n  bufferSize,\n}: AtomicsChannelOptions = {}): AtomicsChannel {\n  const data = new Uint8Array(new SharedArrayBuffer(bufferSize || 128 * 1024));\n  const meta = new Int32Array(\n    new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * 2),\n  );\n  return {type: \"atomics\", data, meta};\n}\n\nexport function makeServiceWorkerChannel(\n  options: ServiceWorkerChannelOptions = {},\n): ServiceWorkerChannel {\n  const baseUrl = (options.scope || \"/\") + BASE_URL_SUFFIX;\n  return {type: \"serviceWorker\", baseUrl, timeout: options.timeout || 5000};\n}\n\nfunction ensurePositiveNumber(n: number, defaultValue: number) {\n  return n > 0 ? +n : defaultValue;\n}\n\n/**\n * Call this in a web worker to synchronously receive a message sent by the main thread with `writeMessage`.\n *\n * @param channel a non-null object returned by `makeChannel`, `makeAtomicsChannel`, or `makeServiceWorkerChannel`.\n *                Should be created once in the main thread and then sent to the worker.\n * @param messageId a unique string identifying the message that the worker is waiting for.\n *                  Currently only used by service worker channels.\n *                  Typically created in the worker using the `uuidv4` function and then sent to the main thread\n *                  *before* calling `readMessage`.\n * @param checkInterrupt a function which may be called regularly while `readMessage`\n *                       is checking for messages on the channel.\n *                       If it returns `true`, then `readMessage` will return `null`.\n * @param timeout a number of milliseconds.\n *                If this much time elapses without receiving a message, `readMessage` will return `null`.\n */\nexport function readMessage(\n  channel: Channel,\n  messageId: string,\n  {\n    checkInterrupt,\n    checkTimeout,\n    timeout,\n  }: {\n    checkInterrupt?: () => boolean;\n    checkTimeout?: number;\n    timeout?: number;\n  } = {},\n) {\n  const startTime = performance.now();\n\n  checkTimeout = ensurePositiveNumber(\n    checkTimeout,\n    checkInterrupt ? 100 : 5000,\n  );\n  const totalTimeout = ensurePositiveNumber(timeout, Number.POSITIVE_INFINITY);\n  let check;\n\n  if (channel.type === \"atomics\") {\n    const {data, meta} = channel;\n\n    check = () => {\n      if (Atomics.wait(meta, 1, 0, checkTimeout) === \"timed-out\") {\n        return null;\n      } else {\n        const size = Atomics.exchange(meta, 0, 0);\n        const bytes = data.slice(0, size);\n        Atomics.store(meta, 1, 0);\n\n        const decoder = new TextDecoder();\n        const text = decoder.decode(bytes);\n        return JSON.parse(text);\n      }\n    };\n  } else {\n    check = () => {\n      const request = new XMLHttpRequest();\n      // `false` makes the request synchronous\n      const url = channel.baseUrl + \"/read\";\n      request.open(\"POST\", url, false);\n      const requestBody: ServiceWorkerReadRequest = {\n        messageId,\n        timeout: checkTimeout,\n      };\n      request.send(JSON.stringify(requestBody));\n      const {status} = request;\n\n      if (status === 408) {\n        return null;\n      } else if (status === 200) {\n        const response = JSON.parse(request.responseText);\n        if (response.version !== VERSION) {\n          return null;\n        }\n        return response.message;\n      } else if (performance.now() - startTime < channel.timeout) {\n        return null;\n      } else {\n        throw new ServiceWorkerError(url, status);\n      }\n    };\n  }\n\n  while (true) {\n    const elapsed = performance.now() - startTime;\n    const remaining = totalTimeout - elapsed;\n    if (remaining <= 0) {\n      return null;\n    }\n\n    checkTimeout = Math.min(checkTimeout, remaining);\n    const result = check();\n\n    if (result !== null) {\n      return result;\n    } else if (checkInterrupt?.()) {\n      return null;\n    }\n  }\n}\n\n/**\n * Synchronously waits until the given time has elapsed without wasting CPU in a busy loop,\n * but not very accurate.\n */\nexport function syncSleep(ms: number, channel: Channel) {\n  ms = ensurePositiveNumber(ms, 0);\n  if (!ms) {\n    return;\n  }\n\n  if (typeof SharedArrayBuffer !== \"undefined\") {\n    const arr = new Int32Array(\n      new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT),\n    );\n    arr[0] = 0;\n    Atomics.wait(arr, 0, 0, ms);\n  } else {\n    const messageId = `sleep ${ms} ${uuidv4()}`;\n    readMessage(channel, messageId, {timeout: ms});\n  }\n}\n\n/**\n * Returns a unique random string in UUID v4 format.\n * Uses `crypto.randomUUID` directly if possible.\n * Otherwise uses a custom implementation which uses `crypto.getRandomValues`.\n */\nexport let uuidv4: () => string;\n\nif (\"randomUUID\" in crypto) {\n  uuidv4 = function uuidv4() {\n    return (crypto as any).randomUUID();\n  };\n} else {\n  // https://stackoverflow.com/a/2117523/2482744\n  uuidv4 = function uuidv4() {\n    return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, (char) => {\n      const c = Number(char);\n      return (\n        c ^\n        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n      ).toString(16);\n    });\n  };\n}\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","// Detect if we're in node\ndeclare var process: any;\n\nexport const IN_NODE =\n  typeof process !== \"undefined\" &&\n  process.release &&\n  process.release.name === \"node\" &&\n  typeof process.browser ===\n    \"undefined\"; /* This last condition checks if we run the browser shim of process */\n\nlet nodeUrlMod: any;\nlet nodeFetch: any;\nlet nodePath: any;\nlet nodeVmMod: any;\n/** @private */\nexport let nodeFsPromisesMod: any;\n\ndeclare var globalThis: {\n  importScripts: (url: string) => void;\n  document?: any;\n  fetch?: any;\n};\n\n/**\n * If we're in node, it's most convenient to import various node modules on\n * initialization. Otherwise, this does nothing.\n * @private\n */\nexport async function initNodeModules() {\n  if (!IN_NODE) {\n    return;\n  }\n  // @ts-ignore\n  nodeUrlMod = (await import(\"url\")).default;\n  nodeFsPromisesMod = await import(\"fs/promises\");\n  if (globalThis.fetch) {\n    nodeFetch = fetch;\n  } else {\n    // @ts-ignore\n    nodeFetch = (await import(\"node-fetch\")).default;\n  }\n  // @ts-ignore\n  nodeVmMod = (await import(\"vm\")).default;\n  nodePath = await import(\"path\");\n  pathSep = nodePath.sep;\n\n  // Emscripten uses `require`, so if it's missing (because we were imported as\n  // an ES6 module) we need to polyfill `require` with `import`. `import` is\n  // async and `require` is synchronous, so we import all packages that might be\n  // required up front and define require to look them up in this table.\n\n  if (typeof require !== \"undefined\") {\n    return;\n  }\n  // These are all the packages required in pyodide.asm.js. You can get this\n  // list with:\n  // $ grep -o 'require(\"[a-z]*\")' pyodide.asm.js  | sort -u\n  const fs = await import(\"fs\");\n  const crypto = await import(\"crypto\");\n  const ws = await import(\"ws\");\n  const child_process = await import(\"child_process\");\n  const node_modules: { [mode: string]: any } = {\n    fs,\n    crypto,\n    ws,\n    child_process,\n  };\n  // Since we're in an ES6 module, this is only modifying the module namespace,\n  // it's still private to Pyodide.\n  (globalThis as any).require = function (mod: string): any {\n    return node_modules[mod];\n  };\n}\n\nfunction node_resolvePath(path: string, base?: string): string {\n  return nodePath.resolve(base || \".\", path);\n}\n\nfunction browser_resolvePath(path: string, base?: string): string {\n  if (base === undefined) {\n    // @ts-ignore\n    base = location;\n  }\n  return new URL(path, base).toString();\n}\n\nexport let resolvePath: (rest: string, base?: string) => string;\nif (IN_NODE) {\n  resolvePath = node_resolvePath;\n} else {\n  resolvePath = browser_resolvePath;\n}\n\n/**\n * Get the path separator. If we are on Linux or in the browser, it's /.\n * In Windows, it's \\.\n * @private\n */\nexport let pathSep: string;\n\nif (!IN_NODE) {\n  pathSep = \"/\";\n}\n\n/**\n * Load a binary file, only for use in Node. If the path explicitly is a URL,\n * then fetch from a URL, else load from the file system.\n * @param indexURL base path to resolve relative paths\n * @param path the path to load\n * @param checksum sha-256 checksum of the package\n * @returns An ArrayBuffer containing the binary data\n * @private\n */\nasync function node_loadBinaryFile(\n  path: string,\n  _file_sub_resource_hash?: string | undefined // Ignoring sub resource hash. See issue-2431.\n): Promise<Uint8Array> {\n  if (path.startsWith(\"file://\")) {\n    // handle file:// with filesystem operations rather than with fetch.\n    path = path.slice(\"file://\".length);\n  }\n  if (path.includes(\"://\")) {\n    // If it has a protocol, make a fetch request\n    let response = await nodeFetch(path);\n    if (!response.ok) {\n      throw new Error(`Failed to load '${path}': request failed.`);\n    }\n    return new Uint8Array(await response.arrayBuffer());\n  } else {\n    // Otherwise get it from the file system\n    const data = await nodeFsPromisesMod.readFile(path);\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  }\n}\n\n/**\n * Load a binary file, only for use in browser. Resolves relative paths against\n * indexURL.\n *\n * @param path the path to load\n * @param subResourceHash the sub resource hash for fetch() integrity check\n * @returns A Uint8Array containing the binary data\n * @private\n */\nasync function browser_loadBinaryFile(\n  path: string,\n  subResourceHash: string | undefined\n): Promise<Uint8Array> {\n  // @ts-ignore\n  const url = new URL(path, location);\n  let options = subResourceHash ? { integrity: subResourceHash } : {};\n  // @ts-ignore\n  let response = await fetch(url, options);\n  if (!response.ok) {\n    throw new Error(`Failed to load '${url}': request failed.`);\n  }\n  return new Uint8Array(await response.arrayBuffer());\n}\n\n/** @private */\nexport let loadBinaryFile: (\n  path: string,\n  file_sub_resource_hash?: string | undefined\n) => Promise<Uint8Array>;\nif (IN_NODE) {\n  loadBinaryFile = node_loadBinaryFile;\n} else {\n  loadBinaryFile = browser_loadBinaryFile;\n}\n\n/**\n * Currently loadScript is only used once to load `pyodide.asm.js`.\n * @param url\n * @async\n * @private\n */\nexport let loadScript: (url: string) => Promise<void>;\n\nif (globalThis.document) {\n  // browser\n  loadScript = async (url) => await import(url);\n} else if (globalThis.importScripts) {\n  // webworker\n  loadScript = async (url) => {\n    try {\n      // use importScripts in classic web worker\n      globalThis.importScripts(url);\n    } catch (e) {\n      // importScripts throws TypeError in a module type web worker, use import instead\n      if (e instanceof TypeError) {\n        await import(url);\n      } else {\n        throw e;\n      }\n    }\n  };\n} else if (IN_NODE) {\n  loadScript = nodeLoadScript;\n} else {\n  throw new Error(\"Cannot determine runtime environment\");\n}\n\n/**\n * Load a text file and executes it as Javascript\n * @param url The path to load. May be a url or a relative file system path.\n * @private\n */\nasync function nodeLoadScript(url: string) {\n  if (url.startsWith(\"file://\")) {\n    // handle file:// with filesystem operations rather than with fetch.\n    url = url.slice(\"file://\".length);\n  }\n  if (url.includes(\"://\")) {\n    // If it's a url, load it with fetch then eval it.\n    nodeVmMod.runInThisContext(await (await nodeFetch(url)).text());\n  } else {\n    // Otherwise, hopefully it is a relative path we can load from the file\n    // system.\n    await import(nodeUrlMod.pathToFileURL(url).href);\n  }\n}\n","/** @private */\nexport interface Module {\n  noImageDecoding: boolean;\n  noAudioDecoding: boolean;\n  noWasmDecoding: boolean;\n  preRun: { (): void }[];\n  print: (a: string) => void;\n  printErr: (a: string) => void;\n  ENV: { [key: string]: string };\n  preloadedWasm: any;\n  FS: any;\n}\n\n/**\n * The Emscripten Module.\n *\n * @private\n */\nexport function createModule(): any {\n  let Module: any = {};\n  Module.noImageDecoding = true;\n  Module.noAudioDecoding = true;\n  Module.noWasmDecoding = false; // we preload wasm using the built in plugin now\n  Module.preloadedWasm = {};\n  Module.preRun = [];\n  return Module;\n}\n\n/**\n *\n * @param stdin\n * @param stdout\n * @param stderr\n * @private\n */\nexport function setStandardStreams(\n  Module: Module,\n  stdin?: () => string,\n  stdout?: (a: string) => void,\n  stderr?: (a: string) => void\n) {\n  // For stdout and stderr, emscripten provides convenient wrappers that save us the trouble of converting the bytes into a string\n  if (stdout) {\n    Module.print = stdout;\n  }\n\n  if (stderr) {\n    Module.printErr = stderr;\n  }\n\n  // For stdin, we have to deal with the low level API ourselves\n  if (stdin) {\n    Module.preRun.push(function () {\n      Module.FS.init(createStdinWrapper(stdin), null, null);\n    });\n  }\n}\n\nfunction createStdinWrapper(stdin: () => string) {\n  // When called, it asks the user for one whole line of input (stdin)\n  // Then, it passes the individual bytes of the input to emscripten, one after another.\n  // And finally, it terminates it with null.\n  const encoder = new TextEncoder();\n  let input = new Uint8Array(0);\n  let inputIndex = -1; // -1 means that we just returned null\n  function stdinWrapper() {\n    try {\n      if (inputIndex === -1) {\n        let text = stdin();\n        if (text === undefined || text === null) {\n          return null;\n        }\n        if (typeof text !== \"string\") {\n          throw new TypeError(\n            `Expected stdin to return string, null, or undefined, got type ${typeof text}.`\n          );\n        }\n        if (!text.endsWith(\"\\n\")) {\n          text += \"\\n\";\n        }\n        input = encoder.encode(text);\n        inputIndex = 0;\n      }\n\n      if (inputIndex < input.length) {\n        let character = input[inputIndex];\n        inputIndex++;\n        return character;\n      } else {\n        inputIndex = -1;\n        return null;\n      }\n    } catch (e) {\n      // emscripten will catch this and set an IOError which is unhelpful for\n      // debugging.\n      console.error(\"Error thrown in stdin:\");\n      console.error(e);\n      throw e;\n    }\n  }\n  return stdinWrapper;\n}\n\n/**\n * Make the home directory inside the virtual file system,\n * then change the working directory to it.\n *\n * @param path\n * @private\n */\nexport function setHomeDirectory(Module: Module, path: string) {\n  Module.preRun.push(function () {\n    const fallbackPath = \"/\";\n    try {\n      Module.FS.mkdirTree(path);\n    } catch (e) {\n      console.error(`Error occurred while making a home directory '${path}':`);\n      console.error(e);\n      console.error(`Using '${fallbackPath}' for a home directory instead`);\n      path = fallbackPath;\n    }\n    Module.ENV.HOME = path;\n    Module.FS.chdir(path);\n  });\n}\n","/**\n * The main bootstrap code for loading pyodide.\n */\nimport ErrorStackParser from \"error-stack-parser\";\nimport {\n  loadScript,\n  loadBinaryFile,\n  initNodeModules,\n  pathSep,\n  resolvePath,\n} from \"./compat\";\n\nimport { createModule, setStandardStreams, setHomeDirectory } from \"./module\";\nimport version from \"./version\";\n\nimport type { PyodideInterface } from \"./api.js\";\nimport type { PyProxy, PyProxyDict } from \"./pyproxy.gen\";\nexport type { PyodideInterface };\n\nexport type {\n  PyProxy,\n  PyProxyWithLength,\n  PyProxyDict,\n  PyProxyWithGet,\n  PyProxyWithSet,\n  PyProxyWithHas,\n  PyProxyIterable,\n  PyProxyIterator,\n  PyProxyAwaitable,\n  PyProxyBuffer,\n  PyProxyCallable,\n  TypedArray,\n  PyBuffer,\n} from \"./pyproxy.gen\";\n\nexport type Py2JsResult = any;\n\nexport { version };\n\n/**\n * A proxy around globals that falls back to checking for a builtin if has or\n * get fails to find a global with the given key. Note that this proxy is\n * transparent to js2python: it won't notice that this wrapper exists at all and\n * will translate this proxy to the globals dictionary.\n * @private\n */\nfunction wrapPythonGlobals(\n  globals_dict: PyProxyDict,\n  builtins_dict: PyProxyDict\n) {\n  return new Proxy(globals_dict, {\n    get(target, symbol) {\n      if (symbol === \"get\") {\n        return (key: any) => {\n          let result = target.get(key);\n          if (result === undefined) {\n            result = builtins_dict.get(key);\n          }\n          return result;\n        };\n      }\n      if (symbol === \"has\") {\n        return (key: any) => target.has(key) || builtins_dict.has(key);\n      }\n      return Reflect.get(target, symbol);\n    },\n  });\n}\n\nfunction unpackPyodidePy(Module: any, pyodide_py_tar: Uint8Array) {\n  const fileName = \"/pyodide_py.tar\";\n  let stream = Module.FS.open(fileName, \"w\");\n  Module.FS.write(\n    stream,\n    pyodide_py_tar,\n    0,\n    pyodide_py_tar.byteLength,\n    undefined,\n    true\n  );\n  Module.FS.close(stream);\n  const code_ptr = Module.stringToNewUTF8(`\nfrom sys import version_info\npyversion = f\"python{version_info.major}.{version_info.minor}\"\nimport shutil\nshutil.unpack_archive(\"/pyodide_py.tar\", f\"/lib/{pyversion}/site-packages/\")\ndel shutil\nimport importlib\nimportlib.invalidate_caches()\ndel importlib\n    `);\n  let errcode = Module._PyRun_SimpleString(code_ptr);\n  if (errcode) {\n    throw new Error(\"OOPS!\");\n  }\n  Module._free(code_ptr);\n  Module.FS.unlink(fileName);\n}\n\n/**\n * This function is called after the emscripten module is finished initializing,\n * so eval_code is newly available.\n * It finishes the bootstrap so that once it is complete, it is possible to use\n * the core `pyodide` apis. (But package loading is not ready quite yet.)\n * @private\n */\nfunction finalizeBootstrap(API: any, config: ConfigType) {\n  // First make internal dict so that we can use runPythonInternal.\n  // runPythonInternal uses a separate namespace, so we don't pollute the main\n  // environment with variables from our setup.\n  API.runPythonInternal_dict = API._pyodide._base.eval_code(\"{}\") as PyProxy;\n  API.importlib = API.runPythonInternal(\"import importlib; importlib\");\n  let import_module = API.importlib.import_module;\n\n  API.sys = import_module(\"sys\");\n  API.sys.path.insert(0, config.homedir);\n\n  // Set up globals\n  let globals = API.runPythonInternal(\n    \"import __main__; __main__.__dict__\"\n  ) as PyProxyDict;\n  let builtins = API.runPythonInternal(\n    \"import builtins; builtins.__dict__\"\n  ) as PyProxyDict;\n  API.globals = wrapPythonGlobals(globals, builtins);\n\n  // Set up key Javascript modules.\n  let importhook = API._pyodide._importhook;\n  importhook.register_js_finder();\n  importhook.register_js_module(\"js\", config.jsglobals);\n\n  importhook.register_unvendored_stdlib_finder();\n\n  let pyodide = API.makePublicAPI();\n  importhook.register_js_module(\"pyodide_js\", pyodide);\n\n  // import pyodide_py. We want to ensure that as much stuff as possible is\n  // already set up before importing pyodide_py to simplify development of\n  // pyodide_py code (Otherwise it's very hard to keep track of which things\n  // aren't set up yet.)\n  API.pyodide_py = import_module(\"pyodide\");\n  API.pyodide_code = import_module(\"pyodide.code\");\n  API.pyodide_ffi = import_module(\"pyodide.ffi\");\n  API.package_loader = import_module(\"pyodide._package_loader\");\n\n  // copy some last constants onto public API.\n  pyodide.pyodide_py = API.pyodide_py;\n  pyodide.globals = API.globals;\n  return pyodide;\n}\n\ndeclare function _createPyodideModule(Module: any): Promise<void>;\n\n/**\n *  If indexURL isn't provided, throw an error and catch it and then parse our\n *  file name out from the stack trace.\n *\n *  Question: But getting the URL from error stack trace is well... really\n *  hacky. Can't we use\n *  [`document.currentScript`](https://developer.mozilla.org/en-US/docs/Web/API/Document/currentScript)\n *  or\n *  [`import.meta.url`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import.meta)\n *  instead?\n *\n *  Answer: `document.currentScript` works for the browser main thread.\n *  `import.meta` works for es6 modules. In a classic webworker, I think there\n *  is no approach that works. Also we would need some third approach for node\n *  when loading a commonjs module using `require`. On the other hand, this\n *  stack trace approach works for every case without any feature detection\n *  code.\n */\nfunction calculateIndexURL(): string {\n  if (typeof __dirname === \"string\") {\n    return __dirname;\n  }\n  let err: Error;\n  try {\n    throw new Error();\n  } catch (e) {\n    err = e as Error;\n  }\n  let fileName = ErrorStackParser.parse(err)[0].fileName!;\n  const indexOfLastSlash = fileName.lastIndexOf(pathSep);\n  if (indexOfLastSlash === -1) {\n    throw new Error(\n      \"Could not extract indexURL path from pyodide module location\"\n    );\n  }\n  return fileName.slice(0, indexOfLastSlash);\n}\n\n/**\n * See documentation for loadPyodide.\n * @private\n */\nexport type ConfigType = {\n  indexURL: string;\n  lockFileURL: string;\n  homedir: string;\n  fullStdLib?: boolean;\n  stdin?: () => string;\n  stdout?: (msg: string) => void;\n  stderr?: (msg: string) => void;\n  jsglobals?: object;\n};\n\n/**\n * Load the main Pyodide wasm module and initialize it.\n *\n * Only one copy of Pyodide can be loaded in a given JavaScript global scope\n * because Pyodide uses global variables to load packages. If an attempt is made\n * to load a second copy of Pyodide, :any:`loadPyodide` will throw an error.\n * (This can be fixed once `Firefox adopts support for ES6 modules in webworkers\n * <https://bugzilla.mozilla.org/show_bug.cgi?id=1247687>`_.)\n *\n * @returns The :ref:`js-api-pyodide` module.\n * @memberof globalThis\n * @async\n */\nexport async function loadPyodide(\n  options: {\n    /**\n     * The URL from which Pyodide will load the main Pyodide runtime and\n     * packages. Defaults to the url that pyodide is loaded from with the file\n     * name (pyodide.js or pyodide.mjs) removed. It is recommended that you\n     * leave this undefined, providing an incorrect value can cause broken\n     * behavior.\n     */\n    indexURL?: string;\n\n    /**\n     * The URL from which Pyodide will load the Pyodide \"repodata.json\" lock\n     * file. Defaults to ``${indexURL}/repodata.json``. You can produce custom\n     * lock files with :any:`micropip.freeze`\n     */\n    lockFileURL?: string;\n\n    /**\n     * The home directory which Pyodide will use inside virtual file system. Default: \"/home/pyodide\"\n     */\n    homedir?: string;\n\n    /** Load the full Python standard library.\n     * Setting this to false excludes following modules: distutils.\n     * Default: true\n     */\n    fullStdLib?: boolean;\n    /**\n     * Override the standard input callback. Should ask the user for one line of input.\n     */\n    stdin?: () => string;\n    /**\n     * Override the standard output callback.\n     * Default: undefined\n     */\n    stdout?: (msg: string) => void;\n    /**\n     * Override the standard error output callback.\n     * Default: undefined\n     */\n    stderr?: (msg: string) => void;\n    jsglobals?: object;\n  } = {}\n): Promise<PyodideInterface> {\n  await initNodeModules();\n  let indexURL = options.indexURL || calculateIndexURL();\n  indexURL = resolvePath(indexURL); // A relative indexURL causes havoc.\n  if (!indexURL.endsWith(\"/\")) {\n    indexURL += \"/\";\n  }\n  options.indexURL = indexURL;\n\n  const default_config = {\n    fullStdLib: true,\n    jsglobals: globalThis,\n    stdin: globalThis.prompt ? globalThis.prompt : undefined,\n    homedir: \"/home/pyodide\",\n    lockFileURL: indexURL! + \"repodata.json\",\n  };\n  const config = Object.assign(default_config, options) as ConfigType;\n  const pyodide_py_tar_promise = loadBinaryFile(\n    config.indexURL + \"pyodide_py.tar\"\n  );\n\n  const Module = createModule();\n  const API: any = { config };\n  Module.API = API;\n\n  setStandardStreams(Module, config.stdin, config.stdout, config.stderr);\n  setHomeDirectory(Module, config.homedir);\n\n  const moduleLoaded = new Promise((r) => (Module.postRun = r));\n\n  // locateFile tells Emscripten where to find the data files that initialize\n  // the file system.\n  Module.locateFile = (path: string) => config.indexURL + path;\n  const scriptSrc = `${config.indexURL}pyodide.asm.js`;\n  await loadScript(scriptSrc);\n\n  // _createPyodideModule is specified in the Makefile by the linker flag:\n  // `-s EXPORT_NAME=\"'_createPyodideModule'\"`\n  await _createPyodideModule(Module);\n\n  // There is some work to be done between the module being \"ready\" and postRun\n  // being called.\n  await moduleLoaded;\n\n  if (API.version !== version) {\n    throw new Error(\n      `\\\nPyodide version does not match: '${version}' <==> '${API.version}'. \\\nIf you updated the Pyodide version, make sure you also updated the 'indexURL' parameter passed to loadPyodide.\\\n`\n    );\n  }\n\n  // Disable further loading of Emscripten file_packager stuff.\n  Module.locateFile = (path: string) => {\n    throw new Error(\"Didn't expect to load any more file_packager files!\");\n  };\n\n  const pyodide_py_tar = await pyodide_py_tar_promise;\n  unpackPyodidePy(Module, pyodide_py_tar);\n  Module._pyodide_init();\n\n  const pyodide = finalizeBootstrap(API, config);\n\n  // API.runPython works starting here.\n  if (!pyodide.version.includes(\"dev\")) {\n    // Currently only used in Node to download packages the first time they are\n    // loaded. But in other cases it's harmless.\n    API.setCdnUrl(`https://cdn.jsdelivr.net/pyodide/v${pyodide.version}/full/`);\n  }\n  await API.packageIndexReady;\n  if (API.repodata_info.version !== version) {\n    throw new Error(\"Lock file version doesn't match Pyodide version\");\n  }\n  if (config.fullStdLib) {\n    await pyodide.loadPackage([\"distutils\"]);\n  }\n  pyodide.runPython(\"print('Python initialization complete')\");\n  return pyodide;\n}\n","/**\n *\n * The Pyodide version.\n *\n * The version here follows PEP440 which is different from the one in package.json,\n * as we want to compare this with the version of Pyodide Python package without conversion.\n */\nconst version: string = \"0.21.3\";\n\nexport default version;\n","import { loadPyodide, version } from \"./pyodide\";\nexport { loadPyodide, version };\n(globalThis as any).loadPyodide = loadPyodide;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export default __webpack_public_path__ + \"static/media/python_core.tar.52c987ef.load_by_url\";","/* eslint-disable */\n// Otherwise webpack fails silently\n// https://github.com/facebook/create-react-app/issues/8014\n\nimport * as Comlink from 'comlink';\nimport pythonCoreUrl from \"./python_core.tar.load_by_url\"\nimport {\n  loadPyodideAndPackage,\n  makeRunnerCallback,\n  pyodideExpose,\n  PyodideFatalErrorReloader\n} from \"pyodide-worker-runner\";\n\nconst reloader = new PyodideFatalErrorReloader(async () => {\n  const pyodide = await loadPyodideAndPackage({url: pythonCoreUrl, format: \"tar\"});\n  pyodide.pyimport(\"core.init_pyodide\").init(process.env.REACT_APP_LANGUAGE);\n  return pyodide;\n});\n\nlet programCount = 1;\n\nconst runCode = pyodideExpose(\n  async function (extras, entry, outputCallback, inputCallback) {\n    let outputPromise;\n    const callback = makeRunnerCallback(extras, {\n      input: () => inputCallback(),\n      output: (parts) => {\n        outputPromise = outputCallback(parts);\n      },\n    });\n\n    return await reloader.withPyodide(async (pyodide) => {\n      const pyodide_worker_runner = pyodide.pyimport(\"pyodide_worker_runner\");\n      try {\n        await pyodide_worker_runner.install_imports(entry.input);\n      } catch (e) {\n        console.error(e);\n      }\n\n      const checkerModule = pyodide.pyimport(\"core.checker\");\n      checkerModule.default_runner.set_filename(`/my_program_${programCount++}.py`)\n      const result = checkerModule.check_entry(entry, callback);\n      await outputPromise;\n      return result.toJs({dict_converter: Object.fromEntries});\n    });\n  },\n);\n\nComlink.expose({runCode});\n"],"sourceRoot":""}